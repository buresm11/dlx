//=====-- DLXSubtarget.h - Define Subtarget for the DLX -----*- C++ -*--==//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the DLX specific subclass of TargetSubtarget.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_DLX_DLXSUBTARGET_H
#define LLVM_LIB_TARGET_DLX_DLXSUBTARGET_H

#include "DLXFrameLowering.h"
#include "DLXISelLowering.h"
#include "DLXInstrInfo.h"
#include "DLXSelectionDAGInfo.h"
#include "llvm/CodeGen/TargetFrameLowering.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "DLXGenSubtargetInfo.inc"

namespace llvm {

class DLXSubtarget : public DLXGenSubtargetInfo {
public:
  // This constructor initializes the data members to match that
  // of the specified triple.
  DLXSubtarget(const Triple &TargetTriple, StringRef Cpu,
                 StringRef FeatureString, const TargetMachine &TM,
                 const TargetOptions &Options, CodeModel::Model CodeModel,
                 CodeGenOpt::Level OptLevel);

  // ParseSubtargetFeatures - Parses features string setting specified
  // subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  DLXSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

  void initSubtargetFeatures(StringRef CPU, StringRef FS);

  bool enableMachineScheduler() const override { return true; }

  const DLXInstrInfo *getInstrInfo() const override { return &InstrInfo; }

  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }

  const DLXRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }

  const DLXTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }

  const DLXSelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

private:
  DLXFrameLowering FrameLowering;
  DLXInstrInfo InstrInfo;
  DLXTargetLowering TLInfo;
  DLXSelectionDAGInfo TSInfo;
};
} // namespace llvm

#endif // LLVM_LIB_TARGET_DLX_DLXSUBTARGET_H
